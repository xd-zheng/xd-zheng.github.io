<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Fluent批量监控变量值</title>
      <link href="/2020/07/15/Fluent_monitor_journal/"/>
      <url>/2020/07/15/Fluent_monitor_journal/</url>
      
        <content type="html"><![CDATA[<center>Fluent批量监控变量值</center><a id="more"></a><p>操作系统：windows10<br>Fluent版本：2019R2</p><h2 id="："><a href="#：" class="headerlink" title="："></a><span class='p h2 blue'>1. 基本流程</span>：</h2><p>Fluent中的批量操作可通过journal文件来实现，类似于APDL的命令流，软件读取命令来代替GUI操作。</p><p>1.1 点击start journal并保存文件</p><div class="tabs" id="tab-1"><ul class="nav-tabs"><li class="tab active"><a href="#tab-1-1">Start journal</a></li><li class="tab"><a href="#tab-1-2">Save journal</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-1-1"><p><img src="/images/%E7%9B%91%E6%8E%A7%E7%82%B91.png" alt=""></p></div><div class="tab-pane" id="tab-1-2"><p><img src="/images/%E7%9B%91%E6%8E%A7%E7%82%B92.png" alt=""></p></div></div></div><p>1.2 进行GUI界面操作。 本例是批量设置监控点并监控其x方向速度，同时写入文件</p><div class="tabs" id="tab-2"><ul class="nav-tabs"><li class="tab active"><a href="#tab-2-1">Definition</a></li><li class="tab"><a href="#tab-2-2">Set Point</a></li><li class="tab"><a href="#tab-2-3">Done</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-2-1"><p><img src="/images/%E7%9B%91%E6%8E%A7%E7%82%B93.png" alt=""></p></div><div class="tab-pane" id="tab-2-2"><p><img src="/images/%E7%9B%91%E6%8E%A7%E7%82%B95.png" alt=""></p></div><div class="tab-pane" id="tab-2-3"><p><img src="/images/%E7%9B%91%E6%8E%A7%E7%82%B94.png" alt=""></p></div></div></div><p>1.3 stop journal停止操作<br><img src="/images/%E7%9B%91%E6%8E%A7%E7%82%B96.png" alt=""></p><p>打开刚才保存的journal文件，这些命令一一对应刚才进行的GUI操作，为了达成本例的目的，我们只需要对这些命令进行修改，然后利用Fluen的read journal去读这个文件执行相应的操作即可。其中，红色圈出部分为点的xyz坐标，以及这些点建立后在Fluent中对应的序号。<br><img src="/images/%E7%9B%91%E6%8E%A7%E7%82%B97.png" alt=""><br><img src="/images/%E7%9B%91%E6%8E%A7%E7%82%B98.png" alt=""><br>因此，我们现在要做的就是将这些命令复制黏贴，同时注意将红色圈出部分修改为对应点的编号和坐标即可。</p><div class="note "><p>这里需要说明几点：</p></div><ol><li>在Fluent建立点之后，并不是按照数字进行排序的，而是按照文本方式排序，比如建立1-12号点，不是Point1 Point2 Point3…Point10 Point11 Point12，而是Point1 Point10 Point11 Point12 Point2 Point3…Point9。但是，一般我们在输入点的时候是按照升序的方式处理的，以方便对数据进行后处理。因此，需要对点序号的数值型顺序和文本排序顺序之间进行对应。而不同的点会影响文本序号，因此，不能像上一个操作中建立一个点然后马上监控一个点。这里操作应该分为两步：一次性建立所有点；监控点。</li><li>如监控对象不是点而是面，或监控变量不是x方向速度而是压力，可相应修改对应journal命令即可。</li><li>Fluent版本不同journal命令有差别，针对不同Fluent版本需相应journal命令。</li></ol><h2 id="：-1"><a href="#：-1" class="headerlink" title="："></a><span class='p h2 blue'>2. 代码实现</span>：</h2><p>通过MATLAB或Python都可轻松进行读写文件操作，Python代码时间太久了没存，懒得重搞了，下面给出MATLAB代码及相应文件：</p><figure class="highlight matlab"><figcaption><span>[Fluent_setPointMonitor] [] [url]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">pointNum = <span class="number">30</span>;<span class="comment">%点数量</span></span><br><span class="line">coordinate = csvread(<span class="string">'coordinate.csv'</span>);<span class="comment">%点坐标文件</span></span><br><span class="line">firstPointLoc = <span class="number">3</span>;<span class="comment">%Fluent中按文本排序对应的Point1编号</span></span><br><span class="line"></span><br><span class="line">firstPointLoc = firstPointLoc<span class="number">-1</span></span><br><span class="line">temp = <span class="number">1</span>:pointNum;</span><br><span class="line">pointArray = cell(pointNum, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> t = <span class="number">1</span>:pointNum</span><br><span class="line">    pointArray&#123;t&#125; = num2str(temp(t));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">pointArray = <span class="built_in">sort</span>(pointArray);</span><br><span class="line">pointArray = str2num(char(pointArray));</span><br><span class="line">[pointArray index] = <span class="built_in">sort</span>(pointArray);</span><br><span class="line">index = index + firstPointLoc;</span><br><span class="line"></span><br><span class="line">jou = fopen(<span class="string">'setPoint.jou'</span>,<span class="string">'w'</span>);</span><br><span class="line">fprintf(jou, <span class="string">'(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Surface)*PushButton1(Create)")\n(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreate*Point...")'</span>);</span><br><span class="line"><span class="keyword">for</span> ii = <span class="number">1</span>:pointNum</span><br><span class="line">    fprintf(jou, <span class="string">'%s%d%s\n'</span>, <span class="string">'(cx-gui-do cx-set-text-entry "Point Surface*Table1*TextEntry1(New Surface Name)" "point-'</span>, ii, <span class="string">'")'</span>);</span><br><span class="line">    fprintf(jou, <span class="string">'%s%s%s\n'</span>, <span class="string">'(cx-gui-do cx-set-real-entry-list "Point Surface*Table1*Frame4(Coordinates)*Table1*RealEntry1(x0)" ''( '</span>, num2str(coordinate(ii, <span class="number">1</span>)), <span class="string">'))'</span>);</span><br><span class="line">    fprintf(jou, <span class="string">'%s%s%s\n'</span>, <span class="string">'(cx-gui-do cx-set-real-entry-list "Point Surface*Table1*Frame4(Coordinates)*Table1*RealEntry1(y0)" ''( '</span>, num2str(coordinate(ii, <span class="number">1</span>)), <span class="string">'))'</span>);</span><br><span class="line">    <span class="comment">%二维时删除下面这一行</span></span><br><span class="line">    fprintf(jou, <span class="string">'%s%s%s\n'</span>, <span class="string">'(cx-gui-do cx-set-real-entry-list "Point Surface*Table1*Frame4(Coordinates)*Table1*RealEntry1(z0)" ''( '</span>, num2str(coordinate(ii, <span class="number">1</span>)), <span class="string">'))'</span>);</span><br><span class="line">    fprintf(jou, <span class="string">'%s\n'</span>, <span class="string">'(cx-gui-do cx-activate-item "Point Surface*PanelButtons*PushButton1(OK)")'</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> ii = <span class="number">1</span>:pointNum</span><br><span class="line">    fprintf(jou, <span class="string">'%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n'</span>, <span class="string">'(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Reports)*PushButton2(Definitions)")'</span>, <span class="string">'(cx-gui-do cx-activate-item "MenuBar*Surface ReportSubMenu*Vertex Average...")'</span>, <span class="string">'(cx-gui-do cx-set-list-selections "Surface Report Definition*Table1*Table2*DropDownList3(Field Variable)" ''( 2))'</span>, <span class="string">'(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*DropDownList3(Field Variable)")'</span>, <span class="string">'(cx-gui-do cx-set-list-selections "Surface Report Definition*Table1*Table2*DropDownList4" ''( 1))'</span>, <span class="string">'(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*DropDownList4")'</span>, <span class="string">'(cx-gui-do cx-set-toggle-button2 "Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton1(Report File)" #t)'</span>, <span class="string">'(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton1(Report File)")'</span>);</span><br><span class="line">    fprintf(jou, <span class="string">'%s%s%s\n'</span>, <span class="string">'(cx-gui-do cx-set-list-selections "Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)" ''( '</span>, num2str(index(ii, <span class="number">1</span>)), <span class="string">'))'</span>);</span><br><span class="line">    fprintf(jou, <span class="string">'%s\n%s\n'</span>, <span class="string">'(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)")'</span>, <span class="string">'(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton1(OK)")'</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fclose(jou);</span><br></pre></td></tr></table></figure><span class='btn center large'><a href='https://pan.baidu.com/s/1uEWAHnSOW6wuBiITfny8rg' target="_blank" rel="noopener" title='示例代码及文件(提取码：j9c9)'><i class='fas fa-download'></i>示例代码及文件(提取码：j9c9)</a></span>]]></content>
      
      
      <categories>
          
          <category> 软件应用 </category>
          
          <category> Fluent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fluent，批量监控 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
